@model JardinesEF.Web.Models.Producto.ProductoEditVm

@{
    ViewBag.Title = "Create";
}

<h2>Nuevo Producto</h2>

@using (Html.BeginForm("Create", "Productos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-7">
                <div class="form-group">
                    @Html.LabelFor(model => model.NombreProducto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NombreProducto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NombreProducto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NombreLatin, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NombreLatin, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NombreLatin, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProveedorId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ProveedorId, new SelectList(Model.Proveedores, "ProveedorId", "NombreProveedor"), "Seleccione Proveedor", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProveedorId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoriaId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CategoriaId, new SelectList(Model.Categorias, "CategoriaId", "NombreCategoria"), "Seleccione Categoría", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PrecioUnitario, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PrecioUnitario, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PrecioUnitario, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UnidadesEnStock, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UnidadesEnStock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnidadesEnStock, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NivelDeReposicion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NivelDeReposicion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NivelDeReposicion, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Suspendido)
                    @Html.CheckBoxFor(model => model.Suspendido)
                    @Html.ValidationMessageFor(model => model.Suspendido, "", new { @class = "text-danger" })
                </div>
                <h2>Foto del Producto</h2>

                <div class="well">
                    <img id="imgSalida" src="@Url.Content($"~/Content/Imagenes/Productos/{Model.Imagen}")" alt="Imagen" style="width: 50%">
                    <div class="caption">
                        <p>@Model.NombreProducto</p>
                    </div>
                    <span class="btn btn-default btn-file" id="file-input">
                        @Html.TextBoxFor(modelo => modelo.ImagenFile, new { type = "file" })
                    </span>
                </div>
                <br>

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary" />
                @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}

@section scripts
{
    <script>
        $(document).ready(function () {
            $('#file-input').change(function (e) {
                addImage(e);
            });

            function addImage(e) {
                var file = e.target.files[0],
                    imageType = /image.*/;

                if (!file.type.match(imageType))
                    return;

                var reader = new FileReader();
                reader.onload = fileOnload;
                reader.readAsDataURL(file);
            }

            function fileOnload(e) {
                var result = e.target.result;
                $('#imgSalida').attr("src", result);
            }

        });


    </script>

}


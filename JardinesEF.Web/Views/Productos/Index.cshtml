@model PagedList.IPagedList<JardinesEF.Web.Models.Producto.ProductoListVm>
@using PagedList.Mvc
@using JardinesEF.Web.Clases

@{
    ViewBag.Title = "Index";
}

<h2>Lista de Productos</h2>

@using (Html.BeginForm(null, null, FormMethod.Get, new { @class = "form-inline" }))
{
    <p>
        @Html.ActionLink("Nuevo", "Create", null, new { @class = "btn btn-primary" })

        <label>Filtrar por:</label>
        @Html.DropDownList("categoriaSeleccionadaId", (SelectList)ViewBag.Categorias, htmlAttributes: new { @class = "form-control" })
        <input type="submit" class="btn btn-success" value="Filtrar" />

    </p>

}

@if (TempData["Operacion"] != null)
{
    var operacion = (Operacion)TempData["Operacion"];
    var msg = TempData["Msg"].ToString();

    switch (operacion)
    {
        case Operacion.Agregar:
            <div class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert">&times;</button>
                <strong>Éxito!</strong> @msg
            </div>
            break;
        case Operacion.Borrar:
            <div class="alert alert-danger alert-dismissible">
                <button type="button" class="close" data-dismiss="alert">&times;</button>
                <strong>Éxito!</strong> @msg
            </div>

            break;
        case Operacion.Editar:
            <div class="alert alert-warning alert-dismissible">
                <button type="button" class="close" data-dismiss="alert">&times;</button>
                <strong>Éxito!</strong> @msg
            </div>

            break;
    }

}

<table class="table table-bordered table-hover">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().NombreProducto)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().NombreLatin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().NombreProveedor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().NombreCategoria)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().PrecioUnitario)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().UnidadesEnStock)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.NombreProducto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NombreLatin)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NombreProveedor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NombreCategoria)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PrecioUnitario)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnidadesEnStock)
            </td>
            <td>
                @using (Html.BeginForm("AddToCart", "Carrito"))
                {
                    <div class="btn-group">
                        @Html.ActionLink("Edit", "Edit", "Productos", new { id = item.ProductoId }, new { @class = "btn btn-warning" })
                        @Html.ActionLink("Details", "Details", "Productos", new { id = item.ProductoId }, new { @class = "btn btn-info" })
                        @Html.ActionLink("Borrar", "Delete", "Productos", new { id = item.ProductoId }, new { @class = "btn btn-danger" })

                        <div style="float: right">
                            @Html.HiddenFor(modelitem => item.ProductoId)
                            @Html.Hidden("productoId", item.ProductoId)
                            @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                            @if (!item.Suspendido)
                            {
                                <input type="submit" class="btn btn-default" value="Agregar" />
                            }
                            else
                            {
                                <input type="submit" class="btn btn-default" value="Agregar" disabled="disabled" />
                            }
                        </div>
                    </div>
                }
            </td>
        </tr>
    }

</table>


Página: @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber), de: @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder =
    ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter
}))
